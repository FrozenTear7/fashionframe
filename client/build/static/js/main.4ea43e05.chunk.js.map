{"version":3,"sources":["components/core/Navbar.js","components/core/PrivateRoute.js","components/core/SignIn.js","components/core/NotFound.js","utils/fetchAuth.js","components/utils/Loading.js","components/core/Settings.js","utils/mapToOptions.js","components/setups/NewSetupPhysique.js","components/setups/NewSetupAttachments.js","components/setups/ColorPicker.js","components/setups/NewSetupColors.js","components/setups/NewSetupTopPanel.js","components/setups/NewSetupDescription.js","components/setups/NewSetupSyandana.js","components/setups/NewSetup.js","components/search/SearchPagination.js","components/search/SearchList.js","utils/mapColors.js","utils/convertColor.js","components/utils/ColorButton.js","components/utils/ColorsModal.js","components/setups/Setup.js","components/core/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["Navbar","state","logoutRedirect","this","setState","push","to","className","props","isAuthorized","type","data-toggle","data-target","style","position","left","marginLeft","id","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","href","userData","username","Component","PrivateRoute","component","rest","render","NotFound","src","alt","maxWidth","fetchAuth","path","options","requestURL","URL","fetch","credentials","headers","Accept","Loading","Settings","loading","data","error","handleUsernameChange","bind","handleUserDataSubmit","res","json","resJson","message","fetchUserData","event","target","value","method","body","JSON","stringify","ok","window","location","reload","htmlFor","onChange","onClick","mapToOption","element","label","mapToOptions","elements","map","x","mapToOptionsWithNone","NewSetupPhysique","nextProps","nextState","setup","frame","helmet","skin","colorScheme","frameMatchRegex","RegExp","aria-expanded","aria-controls","test","helmets","e","helmetOnChange","skins","skinOnChange","colorPickerComponent","NewSetupAttachments","attachments","defaultValue","chest","chestAttachments","chestOnChange","leftArm","armAttachments","leftArmOnChange","leftLeg","legAttachments","leftLegOnChange","ephemera","ephemeras","ephemeraOnChange","rightArm","rightArmOnChange","rightLeg","ColorPicker","colorPicker","color","width","colorName","Object","keys","colors","OverlayTrigger","trigger","placement","rootClose","overlay","Popover","title","onChangeComplete","buttonColorOnClick","triangle","Button","backgroundColor","formatName","name","charAt","toUpperCase","slice","NewSetupColors","colorNames","i","key","getColorOnClickFunction","setupColors","colorPickers","NewSetupTopPanel","handleNameChange","frames","frameOnChange","saveSetupOnClick","deleteSetupOnClick","NewSetupDescription","description","handleDescriptionChange","screenshot","handleScreenshotChange","syandana","syandanas","syandanaOnChange","NewSetup","createSetupRedirect","deleteSetupRedirect","setupId","setupError","setupLoading","mode","primary","secondary","tertiary","accents","emmissive1","emmissive2","energy1","energy2","postNewSetup","deleteSetup","outputErrorMessage","forEach","length","getErrorFormMessages","resourceName","match","params","fetchWarframeData","fetchSetupData","elementName","setupElementOnChange","getErrorMessages","filter","getColorPickersComponent","hex","attachmentsElementOnChange","rightLegOnChange","NewSetupSyandana","SearchPagination","currentFetchPage","disabled","fetchSetups","numberOfPages","currentPage","startIndex","Math","max","floor","paginationPagesLimit","resultArray","min","getSurroundingPageNumbers","setupFilters","SearchList","setups","frameSelectOnChange","filterSelectOnChange","index","ceil","setupsCount","fetchFrames","marginBottom","liked","created_at","mapColors","resultObject","result","exec","r","parseInt","g","b","hexToRgb","ColorButton","ColorsModal","modalName","closestColor","nearestColor","from","nearestColorPickersValue","columnRow","findIndex","column","row","getColumnRow","distance","colorNamesToButtons","getColorButton","getColorsBlock","Setup","like","likedbyyou","fetchColorPickers","likeSetup","userId","user_id","Main","exact","SignIn","App","loadingUserData","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.4ea43e05.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst serverUrl = \"https://fashionframe.herokuapp.com\";\r\n// eslint-disable-next-line no-unused-vars\r\nconst localUrl = \"http://localhost:3001\";\r\n\r\nclass Navbar extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { logoutRedirect: false };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.logoutRedirect) {\r\n      this.setState({ logoutRedirect: false });\r\n      return <Redirect push to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark navbar-bg-dark\">\r\n          <div className=\"navbar-collapse collapse w-100 order-1 order-md-0 dual-collapse2\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <Link className=\"nav-item nav-link\" to={\"/fashionframe/\"}>\r\n                Home\r\n              </Link>\r\n              {this.props.isAuthorized && (\r\n                <Link\r\n                  className=\"nav-item nav-link\"\r\n                  to={\"/fashionframe/setups/new\"}\r\n                >\r\n                  New setup\r\n                </Link>\r\n              )}\r\n            </ul>\r\n          </div>\r\n          <div className=\"mx-auto order-0\">\r\n            <button\r\n              className=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-toggle=\"collapse\"\r\n              data-target=\".dual-collapse2\"\r\n              style={{ position: \"absolute\", left: 0, marginLeft: \"5%\" }}\r\n            >\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <Link className=\"navbar-brand mx-auto\" to={\"/fashionframe/\"}>\r\n              Fashionframe\r\n            </Link>\r\n          </div>\r\n          <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              {this.props.isAuthorized && (\r\n                <Link\r\n                  className=\"nav-item nav-link\"\r\n                  to={\"/fashionframe/settings\"}\r\n                >\r\n                  Settings\r\n                </Link>\r\n              )}\r\n              <a\r\n                type=\"button\"\r\n                className=\"nav-item nav-link\"\r\n                data-toggle=\"modal\"\r\n                data-target=\"#aboutModal\"\r\n              >\r\n                About\r\n              </a>\r\n\r\n              <div\r\n                className=\"modal fade\"\r\n                id=\"aboutModal\"\r\n                tabIndex=\"-1\"\r\n                role=\"dialog\"\r\n                aria-labelledby=\"aboutModalLabel\"\r\n                aria-hidden=\"true\"\r\n              >\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                  <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                      <h5 className=\"modal-title\" id=\"aboutModalLabel\">\r\n                        About the app\r\n                      </h5>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        aria-label=\"Close\"\r\n                      >\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                      Hi!\r\n                      <br />I decided to make an app for sharing fashion with\r\n                      other Warframe players. <br />I am still an amateur\r\n                      programmer, so the app will have some bugs and it might\r\n                      not have the best looking interface. <br />\r\n                      If you have any issues regarding existing problems or want\r\n                      to share your feedback, visit the app repository on Github\r\n                      and create an Issue.\r\n                      <br />\r\n                      <br />\r\n                      <a\r\n                        href={\r\n                          \"https://github.com/FrozenTear7/fashionframe/issues\"\r\n                        }\r\n                      >\r\n                        Visit repository <i className=\"fa fa-github\"></i>\r\n                      </a>\r\n                      <br />\r\n                      <br />\r\n                      Or{\" \"}\r\n                      <a href=\"mailto:pawelmendroch7@gmail.com\">\r\n                        write to me personally\r\n                      </a>\r\n                      <br />\r\n                      Or whisper in-game at FrozenTear7\r\n                      <br />\r\n                      <br />\r\n                      If you like the app and have a Github account it would be\r\n                      awesome if you gave the project a Star\r\n                      <i className=\"fa fa-star\"></i>.\r\n                      <br />\r\n                      <br />\r\n                      <hr className=\"divider\" />\r\n                      The app is deployed to Heroku running on a free plan\r\n                      server, so there might be some maintenance time every\r\n                      month if there is too much traffic. <br />I will act\r\n                      accordingly depending on the popularity of this project.\r\n                      It's an open source project and I don't plan putting ads\r\n                      here, but it's also the reason I don't have a custom\r\n                      domain for the app and a better server.\r\n                      <br />\r\n                      <br />\r\n                      <br />\r\n                      <small>\r\n                        Fashionframe isn’t endorsed by Digital Extremes and\r\n                        doesn’t reflect the views or opinions of Digital\r\n                        Extremes or anyone officially involved in producing or\r\n                        managing Warframe. Warframe and Digital Extremes are\r\n                        trademarks or registered trademarks of Digital Extremes\r\n                        ©.\r\n                      </small>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary\"\r\n                        data-dismiss=\"modal\"\r\n                      >\r\n                        Close\r\n                      </button>\r\n                      <button type=\"button\" className=\"btn btn-primary\">\r\n                        Save changes\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {!this.props.isAuthorized && (\r\n                <Link className=\"nav-item nav-link\" to={\"/fashionframe/signin\"}>\r\n                  Sign in\r\n                </Link>\r\n              )}\r\n              {this.props.isAuthorized && (\r\n                <li className=\"nav-item nav-link disabled\">\r\n                  User: {this.props.userData.username}\r\n                </li>\r\n              )}\r\n              {this.props.isAuthorized && (\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" href={\"/auth/logout\"}>\r\n                    Sign out\r\n                  </a>\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst PrivateRoute = ({ component: Component, isAuthorized, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (isAuthorized) return <Component {...props} {...rest} />;\r\n        else return <Redirect push to=\"/\" />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { Component } from \"react\";\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst serverUrl = \"https://fashionframe.herokuapp.com\";\r\n// eslint-disable-next-line no-unused-vars\r\nconst localUrl = \"http://localhost:3001\";\r\nclass NotFound extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"center-half\">\r\n        <div className=\"jumbotron\">\r\n          <h1 className=\"display-4\">Sign in to create own fashion setups</h1>\r\n          <hr className=\"my-4\" />\r\n          <a\r\n            className=\"btn btn-primary btn-lg\"\r\n            href={\"/auth/google\"}\r\n            role=\"button\"\r\n          >\r\n            Sign in with<span> </span> <i className=\"fa fa-google-plus\"></i>\r\n          </a>\r\n          <br />\r\n          <br />\r\n          <a\r\n            className=\"btn btn-primary btn-lg\"\r\n            href={\"/auth/twitchtv\"}\r\n            role=\"button\"\r\n          >\r\n            Sign in with<span> </span> <i className=\"fa fa-twitch\"></i>\r\n          </a>\r\n          <br />\r\n          <br />\r\n          <a\r\n            className=\"btn btn-primary btn-lg\"\r\n            href={\"/auth/facebook\"}\r\n            role=\"button\"\r\n          >\r\n            Sign in with<span> </span> <i className=\"fa fa-facebook\"></i>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"center\">\r\n        <h1>\r\n          404 not found <br />\r\n          <br />\r\n        </h1>\r\n        <img\r\n          src=\"./vay_hek.jpg\"\r\n          alt=\"Screaming Vay Hek\"\r\n          style={{ maxWidth: \"60%\" }}\r\n        ></img>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","export const fetchAuth = (path, options) => {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const serverUrl = \"https://fashionframe.herokuapp.com\";\r\n  // eslint-disable-next-line no-unused-vars\r\n  const localUrl = \"http://localhost:3001\";\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  const frontendDeployUrl = \"https://fashionframe.herokuapp.com/fashionframe\";\r\n  // eslint-disable-next-line no-unused-vars\r\n  const frontendLocalUrl = \"http://localhost:3001/fashionframe\";\r\n\r\n  let requestURL = new URL(localUrl + path);\r\n\r\n  return fetch(requestURL, {\r\n    ...options,\r\n    credentials: \"include\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Origin\": frontendLocalUrl,\r\n      \"Access-Control-Allow-Credentials\": true\r\n    }\r\n  });\r\n};\r\n","import React from \"react\";\r\n\r\nfunction Loading() {\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <div className=\"spinner-grow text-dark\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React, { Component } from \"react\";\r\nimport { fetchAuth } from \"../../utils/fetchAuth\";\r\nimport Loading from \"../utils/Loading\";\r\n\r\nclass Settings extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      userData: {\r\n        loading: true,\r\n        data: {\r\n          username: \"\"\r\n        },\r\n        error: \"\"\r\n      }\r\n    };\r\n\r\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n    this.handleUserDataSubmit = this.handleUserDataSubmit.bind(this);\r\n  }\r\n\r\n  async fetchUserData() {\r\n    try {\r\n      const res = await fetchAuth(\"/auth/user\");\r\n      const resJson = await res.json();\r\n\r\n      this.setState({\r\n        userData: {\r\n          ...this.state.userData,\r\n          loading: false,\r\n          error: \"\",\r\n          data: {\r\n            username: resJson.username\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        userData: {\r\n          ...this.state.userData,\r\n          loading: false,\r\n          error: error.message\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.fetchUserData();\r\n  }\r\n\r\n  handleUsernameChange(event) {\r\n    this.setState({\r\n      userData: {\r\n        ...this.state.userData,\r\n        data: { username: event.target.value }\r\n      }\r\n    });\r\n  }\r\n\r\n  async handleUserDataSubmit(event) {\r\n    try {\r\n      const res = await fetchAuth(\"/auth/user\", {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ userData: this.state.userData.data })\r\n      });\r\n\r\n      if (res.ok) {\r\n        window.location.reload();\r\n      } else {\r\n        const resJson = await res.json();\r\n        this.setState({\r\n          userData: {\r\n            ...this.state.userData,\r\n            error: resJson.message\r\n          }\r\n        });\r\n      }\r\n    } catch (err) {\r\n      this.setState({\r\n        userData: {\r\n          ...this.state.userData,\r\n          error: \"Server error\"\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.userData.loading) {\r\n      return <Loading />;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <form\r\n            className=\"center-margin\"\r\n            style={{\r\n              maxWidth: \"50%\"\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Change username</label>\r\n              <input\r\n                className=\"form-control\"\r\n                id=\"username\"\r\n                value={this.state.userData.data.username}\r\n                onChange={this.handleUsernameChange}\r\n              />\r\n            </div>\r\n            {this.state.userData.error && (\r\n              <div className=\"alert alert-danger\" role=\"alert\">\r\n                {this.state.userData.error}\r\n              </div>\r\n            )}\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              type=\"button\"\r\n              onClick={this.handleUserDataSubmit}\r\n            >\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Settings;\r\n","export const mapToOption = element => {\r\n  return { label: element, value: element };\r\n};\r\n\r\nexport const mapToOptions = elements => {\r\n  return elements.map(x => ({ label: x, value: x }));\r\n};\r\n\r\nexport const mapToOptionsWithNone = elements => {\r\n  return [\r\n    { label: \"None\", value: \"None\" },\r\n    ...elements.map(x => ({ label: x, value: x }))\r\n  ];\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { mapToOption, mapToOptions } from \"../../utils/mapToOptions\";\r\n\r\nclass NewSetupPhysique extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (\r\n      nextProps.setup.frame !== this.props.setup.frame ||\r\n      nextProps.setup.helmet !== this.props.setup.helmet ||\r\n      nextProps.setup.skin !== this.props.setup.skin ||\r\n      nextProps.setup.colorScheme !== this.props.setup.colorScheme\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const frameMatchRegex = new RegExp(`.*${this.props.setup.frame} .*`);\r\n\r\n    return (\r\n      <div>\r\n        <div\r\n          className=\"center collapse-button-dark\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#collapsePhysique\"\r\n          aria-expanded=\"false\"\r\n          aria-controls=\"collapsePhysique\"\r\n        >\r\n          PHYSIQUE\r\n        </div>\r\n        <div className=\"collapse show\" id=\"collapsePhysique\">\r\n          <div className=\"card card-body\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"helmetSelect\">Helmet</label>\r\n                  <Select\r\n                    id=\"helmetSelect\"\r\n                    value={mapToOption(\r\n                      frameMatchRegex.test(this.props.setup.helmet)\r\n                        ? this.props.setup.helmet\r\n                        : this.props.setup.frame + \" Helmet\"\r\n                    )}\r\n                    options={mapToOptions(this.props.helmets)}\r\n                    onChange={e => this.props.helmetOnChange(e.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"skinSelect\">Skin</label>\r\n                  <Select\r\n                    id=\"skinSelect\"\r\n                    value={mapToOption(\r\n                      frameMatchRegex.test(this.props.setup.skin)\r\n                        ? this.props.setup.skin\r\n                        : this.props.setup.frame + \" Skin\"\r\n                    )}\r\n                    options={mapToOptions(this.props.skins)}\r\n                    onChange={e => this.props.skinOnChange(e.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <br />\r\n            {this.props.colorPickerComponent}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewSetupPhysique;\r\n","import React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { mapToOption, mapToOptionsWithNone } from \"../../utils/mapToOptions\";\r\n\r\nclass NewSetupAttachments extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (nextProps.setup.attachments !== this.props.setup.attachments) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div\r\n          className=\"center collapse-button-dark\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#collapseAttachments\"\r\n          aria-expanded=\"false\"\r\n          aria-controls=\"collapseAttachments\"\r\n        >\r\n          ATTACHMENTS\r\n        </div>\r\n        <div className=\"collapse\" id=\"collapseAttachments\">\r\n          <div className=\"card card-body\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"chestSelect\">Chest</label>\r\n                  <Select\r\n                    id=\"chestSelect\"\r\n                    defaultValue={mapToOption(\r\n                      this.props.setup.attachments.chest || \"None\"\r\n                    )}\r\n                    options={mapToOptionsWithNone(this.props.chestAttachments)}\r\n                    onChange={e => this.props.chestOnChange(e.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"leftArmSelect\">Left Arm</label>\r\n                  <Select\r\n                    id=\"leftArmSelect\"\r\n                    defaultValue={mapToOption(\r\n                      this.props.setup.attachments.leftArm || \"None\"\r\n                    )}\r\n                    options={mapToOptionsWithNone(this.props.armAttachments)}\r\n                    onChange={e => this.props.leftArmOnChange(e.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"leftArmSelect\">Left Leg</label>\r\n                  <Select\r\n                    id=\"leftArmSelect\"\r\n                    defaultValue={mapToOption(\r\n                      this.props.setup.attachments.leftLeg || \"None\"\r\n                    )}\r\n                    options={mapToOptionsWithNone(this.props.legAttachments)}\r\n                    onChange={e => this.props.leftLegOnChange(e.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"ephemeraSelect\">Ephemera</label>\r\n                  <Select\r\n                    id=\"ephemeraSelect\"\r\n                    defaultValue={mapToOption(\r\n                      this.props.setup.attachments.ephemera || \"None\"\r\n                    )}\r\n                    options={mapToOptionsWithNone(this.props.ephemeras)}\r\n                    onChange={e => this.props.ephemeraOnChange(e.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"rightArmSelect\">Right Arm</label>\r\n                  <Select\r\n                    id=\"rightArmSelect\"\r\n                    defaultValue={mapToOption(\r\n                      this.props.setup.attachments.rightArm || \"None\"\r\n                    )}\r\n                    options={mapToOptionsWithNone(this.props.armAttachments)}\r\n                    onChange={e => this.props.rightArmOnChange(e.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"rightLegSelect\">Right Leg</label>\r\n                  <Select\r\n                    id=\"rightLegSelect\"\r\n                    defaultValue={mapToOption(\r\n                      this.props.setup.attachments.rightLeg || \"None\"\r\n                    )}\r\n                    options={mapToOptionsWithNone(this.props.legAttachments)}\r\n                    onChange={e => this.props.leftLegOnChange(e.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <br />\r\n            {this.props.colorPickerComponent}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewSetupAttachments;\r\n","import React, { Component } from \"react\";\r\nimport { GithubPicker } from \"react-color\";\r\nimport Select from \"react-select\";\r\nimport { Button, OverlayTrigger, Popover } from \"react-bootstrap\";\r\nimport { mapToOption, mapToOptions } from \"../../utils/mapToOptions\";\r\n\r\nclass ColorPicker extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      colorPicker: \"Classic\"\r\n    };\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (\r\n      nextState.colorPicker !== this.state.colorPicker ||\r\n      nextProps.color !== this.props.color\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul className=\"list-inline\">\r\n          <li className=\"list-inline-item\">\r\n            <div style={{ width: \"175px\" }}>\r\n              {this.props.colorName}\r\n              <Select\r\n                defaultValue={mapToOption(\"Classic\")}\r\n                options={mapToOptions(Object.keys(this.props.colors))}\r\n                onChange={e => this.setState({ colorPicker: e.value })}\r\n              />\r\n            </div>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <OverlayTrigger\r\n              trigger=\"click\"\r\n              placement=\"right\"\r\n              rootClose={true}\r\n              overlay={\r\n                <Popover id=\"popover-basic\" title=\"Change color\">\r\n                  <GithubPicker\r\n                    onChangeComplete={this.props.buttonColorOnClick}\r\n                    triangle=\"hide\"\r\n                    width=\"138px\"\r\n                    colors={this.props.colors[this.state.colorPicker]}\r\n                  />\r\n                </Popover>\r\n              }\r\n            >\r\n              <Button\r\n                className={\r\n                  !this.props.color\r\n                    ? \"transparent-checkered color-button\"\r\n                    : \"color-button\"\r\n                }\r\n                style={{\r\n                  backgroundColor: this.props.color\r\n                    ? this.props.color\r\n                    : \"#d1d1d1\"\r\n                }}\r\n              />\r\n            </OverlayTrigger>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorPicker;\r\n","import React, { Component } from \"react\";\r\nimport ColorPicker from \"./ColorPicker\";\r\n\r\nconst formatName = name => {\r\n  return name.charAt(0).toUpperCase() + name.slice(1);\r\n};\r\n\r\nclass NewSetupColors extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          {this.props.colorNames.slice(0, 4).map((colorName, i) => (\r\n            <div className=\"col-3\" key={i}>\r\n              <ColorPicker\r\n                key={colorName}\r\n                colorName={formatName(colorName)}\r\n                buttonColorOnClick={this.props.getColorOnClickFunction(\r\n                  colorName\r\n                )}\r\n                color={this.props.setupColors[`${colorName}`]}\r\n                colors={this.props.colorPickers}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <br />\r\n        <div className=\"row\">\r\n          {this.props.colorNames.slice(4, 8).map((colorName, i) => (\r\n            <div className=\"col-3\" key={i}>\r\n              <ColorPicker\r\n                key={colorName}\r\n                colorName={formatName(colorName)}\r\n                buttonColorOnClick={this.props.getColorOnClickFunction(\r\n                  colorName\r\n                )}\r\n                color={this.props.setupColors[`${colorName}`]}\r\n                colors={this.props.colorPickers}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewSetupColors;\r\n","import React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { mapToOption, mapToOptions } from \"../../utils/mapToOptions\";\r\n\r\nclass NewSetupTopPanel extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"setupNameInput\">Setup name</label>\r\n              <input\r\n                id=\"setupNameInput\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={this.props.setup.name}\r\n                onChange={this.props.handleNameChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"frameSelect\">Frame</label>\r\n              <Select\r\n                id=\"frameSelect\"\r\n                defaultValue={mapToOption(this.props.setup.frame)}\r\n                options={mapToOptions(this.props.frames)}\r\n                onChange={e => this.props.frameOnChange(e.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"frameSelect\">Actions</label>\r\n              <ul className=\"list-inline\">\r\n                <li className=\"list-inline-item\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    onClick={this.props.saveSetupOnClick}\r\n                  >\r\n                    Save setup\r\n                  </button>\r\n                </li>\r\n                <li className=\"list-inline-item\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-danger\"\r\n                    onClick={this.props.deleteSetupOnClick}\r\n                  >\r\n                    Delete setup\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewSetupTopPanel;\r\n","import React, { Component } from \"react\";\r\n\r\nclass NewSetupDescription extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"descriptionTextarea\">Description</label>\r\n          <textarea\r\n            id=\"descriptionTextarea\"\r\n            className=\"form-control\"\r\n            value={this.props.description}\r\n            onChange={this.props.handleDescriptionChange}\r\n          />\r\n        </div>\r\n\r\n        <br />\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"screenshotInput\">Screenshot</label>\r\n          <input\r\n            id=\"screenshotInput\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={this.props.screenshot}\r\n            onChange={this.props.handleScreenshotChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewSetupDescription;\r\n","import React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { mapToOption, mapToOptions } from \"../../utils/mapToOptions\";\r\n\r\nclass NewSetupPhysique extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (\r\n      nextProps.setup.syandana !== this.props.setup.syandana ||\r\n      nextProps.setup.syandana.colorScheme !==\r\n        this.props.setup.syandana.colorScheme\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div\r\n          className=\"center collapse-button-dark\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#collapseSyandana\"\r\n          aria-expanded=\"false\"\r\n          aria-controls=\"collapseSyandana\"\r\n        >\r\n          SYANDANA\r\n        </div>\r\n        <div className=\"collapse\" id=\"collapseSyandana\">\r\n          <div className=\"card card-body\">\r\n            <label htmlFor=\"syandanaSelect\">Syandana</label>\r\n            <Select\r\n              id=\"syandanaSelect\"\r\n              defaultValue={mapToOption(\r\n                this.props.setup.attachments.syandana || \"None\"\r\n              )}\r\n              options={mapToOptions(this.props.syandanas)}\r\n              onChange={e => this.props.syandanaOnChange(e.value)}\r\n            />\r\n            <br />\r\n            {this.props.colorPickerComponent}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewSetupPhysique;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { fetchAuth } from \"../../utils/fetchAuth\";\r\nimport NewSetupPhysique from \"./NewSetupPhysique\";\r\nimport NewSetupAttachments from \"./NewSetupAttachments\";\r\nimport NewSetupColors from \"./NewSetupColors\";\r\nimport NewSetupTopPanel from \"./NewSetupTopPanel\";\r\nimport NewSetupDescription from \"./NewSetupDescription\";\r\nimport NewSetupSyandana from \"./NewSetupSyandana\";\r\nimport Loading from \"../utils/Loading\";\r\n\r\nclass NewSetup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      createSetupRedirect: false,\r\n      deleteSetupRedirect: false,\r\n      setupId: \"\",\r\n      setupError: \"\",\r\n      setupLoading: this.props.mode === \"edit\" ? true : false,\r\n      setup: {\r\n        id: \"\",\r\n        name: \"\",\r\n        frame: \"Ash\",\r\n        description: \"\",\r\n        screenshot: \"\",\r\n        skin: \"Ash Skin\",\r\n        helmet: \"Ash Helmet\",\r\n        attachments: {\r\n          id: \"\",\r\n          chest: \"\",\r\n          leftArm: \"\",\r\n          rightArm: \"\",\r\n          leftLeg: \"\",\r\n          rightLeg: \"\",\r\n          ephemera: \"\",\r\n          colorScheme: {\r\n            id: \"\",\r\n            primary: null,\r\n            secondary: null,\r\n            tertiary: null,\r\n            accents: null,\r\n            emmissive1: null,\r\n            emmissive2: null,\r\n            energy1: null,\r\n            energy2: null\r\n          }\r\n        },\r\n        syandana: {\r\n          id: \"\",\r\n          name: \"\",\r\n          colorScheme: {\r\n            id: \"\",\r\n            primary: null,\r\n            secondary: null,\r\n            tertiary: null,\r\n            accents: null,\r\n            emmissive1: null,\r\n            emmissive2: null,\r\n            energy1: null,\r\n            energy2: null\r\n          }\r\n        },\r\n        colorScheme: {\r\n          id: \"\",\r\n          primary: null,\r\n          secondary: null,\r\n          tertiary: null,\r\n          accents: null,\r\n          emmissive1: null,\r\n          emmissive2: null,\r\n          energy1: null,\r\n          energy2: null\r\n        }\r\n      },\r\n      frames: {\r\n        loading: true,\r\n        data: [],\r\n        error: \"\"\r\n      },\r\n      ephemeras: {\r\n        loading: true,\r\n        data: [],\r\n        error: \"\"\r\n      },\r\n      helmets: {\r\n        loading: true,\r\n        data: [],\r\n        error: \"\"\r\n      },\r\n      skins: {\r\n        loading: true,\r\n        data: [],\r\n        error: \"\"\r\n      },\r\n      colorPickers: {\r\n        loading: true,\r\n        data: [],\r\n        error: \"\"\r\n      },\r\n      chestAttachments: {\r\n        loading: true,\r\n        data: [],\r\n        error: \"\"\r\n      },\r\n      armAttachments: {\r\n        loading: true,\r\n        data: [],\r\n        error: \"\"\r\n      },\r\n      legAttachments: {\r\n        loading: true,\r\n        data: [],\r\n        error: \"\"\r\n      },\r\n      syandanas: {\r\n        loading: true,\r\n        data: [],\r\n        error: \"\"\r\n      }\r\n    };\r\n\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n    this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\r\n    this.handleScreenshotChange = this.handleScreenshotChange.bind(this);\r\n    this.postNewSetup = this.postNewSetup.bind(this);\r\n    this.deleteSetup = this.deleteSetup.bind(this);\r\n  }\r\n\r\n  getErrorFormMessages() {\r\n    let outputErrorMessage = \"\";\r\n\r\n    if (!this.state.setup.name) outputErrorMessage += \", provide setup name\";\r\n    if (!this.state.setup.screenshot)\r\n      outputErrorMessage += \", provide setup screenshot URL\";\r\n\r\n    return outputErrorMessage;\r\n  }\r\n\r\n  getErrorMessages() {\r\n    let outputErrorMessage = \"\";\r\n\r\n    const errorArray = [\r\n      this.state.frames.error,\r\n      this.state.ephemeras.error,\r\n      this.state.skins.error,\r\n      this.state.helmets.error,\r\n      this.state.colorPickers.error,\r\n      this.state.chestAttachments.error,\r\n      this.state.armAttachments.error,\r\n      this.state.legAttachments.error,\r\n      this.state.syandanas.error,\r\n      this.state.setupError\r\n    ];\r\n\r\n    errorArray.forEach(error => {\r\n      if (error) return (outputErrorMessage += error + \", \");\r\n    });\r\n\r\n    if (outputErrorMessage.length > 2)\r\n      outputErrorMessage = outputErrorMessage.slice(\r\n        0,\r\n        outputErrorMessage.length - 2\r\n      );\r\n\r\n    if (outputErrorMessage) outputErrorMessage += this.getErrorFormMessages();\r\n\r\n    if (outputErrorMessage) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          {outputErrorMessage}\r\n        </div>\r\n      );\r\n    } else {\r\n      return <span />;\r\n    }\r\n  }\r\n\r\n  async fetchWarframeData(resourceName) {\r\n    try {\r\n      const res = await fetchAuth(`/api/${resourceName}`);\r\n      const resJson = await res.json();\r\n\r\n      if (res.ok) {\r\n        this.setState({\r\n          [resourceName]: {\r\n            ...this.state[resourceName],\r\n            loading: false,\r\n            error: \"\",\r\n            data: resJson[resourceName]\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({\r\n          [resourceName]: {\r\n            ...this.state[resourceName],\r\n            loading: false,\r\n            error: resJson.message\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      this.setState({\r\n        [resourceName]: {\r\n          ...this.state[resourceName],\r\n          loading: false,\r\n          error: `Could not fetch ${resourceName}`\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  async fetchSetupData() {\r\n    try {\r\n      const res = await fetchAuth(`/setups/${this.props.match.params.id}`);\r\n      const resJson = await res.json();\r\n\r\n      if (res.ok) {\r\n        this.setState({\r\n          setupLoading: false,\r\n          setup: resJson.setup\r\n        });\r\n      } else {\r\n        this.setState({\r\n          setupLoading: false,\r\n          setupError: resJson.message\r\n        });\r\n      }\r\n    } catch (error) {\r\n      this.setState({\r\n        setupLoading: false,\r\n        setupError: `Could not fetch setup data`\r\n      });\r\n    }\r\n  }\r\n\r\n  async postNewSetup() {\r\n    try {\r\n      const res = await fetchAuth(\r\n        `/setups${\r\n          this.props.mode === \"edit\" ? `/${this.props.match.params.id}` : \"\"\r\n        }`,\r\n        {\r\n          method: this.props.mode === \"edit\" ? \"PUT\" : \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({ setup: this.state.setup })\r\n        }\r\n      );\r\n      const resJson = await res.json();\r\n\r\n      if (res.ok) {\r\n        this.setState({\r\n          createSetupRedirect: true,\r\n          setupId: resJson.setupId\r\n        });\r\n      } else {\r\n        this.setState({\r\n          setupError: resJson.message\r\n        });\r\n      }\r\n    } catch (error) {\r\n      this.setState({\r\n        setupError:\r\n          this.props.mode === \"edit\"\r\n            ? \"Could not update setup\"\r\n            : \"Could not create setup\"\r\n      });\r\n    }\r\n  }\r\n\r\n  async deleteSetup() {\r\n    if (this.props.mode === \"edit\") {\r\n      try {\r\n        const res = await fetchAuth(`/setups/${this.props.match.params.id}`, {\r\n          method: \"DELETE\"\r\n        });\r\n\r\n        if (res.ok) {\r\n          this.setState({\r\n            deleteSetupRedirect: true\r\n          });\r\n        } else {\r\n          const resJson = await res.json();\r\n\r\n          this.setState({\r\n            setupError: resJson.message\r\n          });\r\n        }\r\n      } catch (error) {\r\n        this.setState({\r\n          setupError: \"Could delete setup\"\r\n        });\r\n      }\r\n    } else if (this.props.mode === \"new\") {\r\n      this.setState({ deleteSetupRedirect: true });\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.fetchWarframeData(\"frames\");\r\n    await this.fetchWarframeData(\"ephemeras\");\r\n    await this.fetchWarframeData(\"skins\");\r\n    await this.fetchWarframeData(\"helmets\");\r\n    await this.fetchWarframeData(\"colorPickers\");\r\n    await this.fetchWarframeData(\"chestAttachments\");\r\n    await this.fetchWarframeData(\"armAttachments\");\r\n    await this.fetchWarframeData(\"legAttachments\");\r\n    await this.fetchWarframeData(\"syandanas\");\r\n\r\n    if (this.props.mode === \"edit\") await this.fetchSetupData();\r\n  }\r\n\r\n  handleNameChange(event) {\r\n    this.setState({\r\n      setup: {\r\n        ...this.state.setup,\r\n        name: event.target.value\r\n      }\r\n    });\r\n  }\r\n\r\n  handleDescriptionChange(event) {\r\n    this.setState({\r\n      setup: {\r\n        ...this.state.setup,\r\n        description: event.target.value\r\n      }\r\n    });\r\n  }\r\n\r\n  handleScreenshotChange(event) {\r\n    this.setState({\r\n      setup: {\r\n        ...this.state.setup,\r\n        screenshot: event.target.value\r\n      }\r\n    });\r\n  }\r\n\r\n  setupElementOnChange(elementName, value) {\r\n    this.setState({\r\n      setup: {\r\n        ...this.state.setup,\r\n        [elementName]: value\r\n      }\r\n    });\r\n  }\r\n\r\n  attachmentsElementOnChange(elementName, value) {\r\n    this.setState({\r\n      setup: {\r\n        ...this.state.setup,\r\n        attachments: {\r\n          ...this.state.setup.attachments,\r\n          [elementName]: value\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  syandanaOnChange(elementName, value) {\r\n    this.setState({\r\n      setup: {\r\n        ...this.state.setup,\r\n        syandanaOnChange: {\r\n          ...this.state.setup.syandanaOnChange,\r\n          [elementName]: value\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getColorPickersComponent(getColorOnClickFunction, setupColors) {\r\n    return (\r\n      <NewSetupColors\r\n        getColorOnClickFunction={getColorOnClickFunction}\r\n        setupColors={setupColors}\r\n        colorNames={[\r\n          \"primary\",\r\n          \"secondary\",\r\n          \"tertiary\",\r\n          \"accents\",\r\n          \"emmissive1\",\r\n          \"emmissive2\",\r\n          \"energy1\",\r\n          \"energy2\"\r\n        ]}\r\n        colorPickers={this.state.colorPickers.data}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (this.state.createSetupRedirect) {\r\n      this.setState({ createSetupRedirect: false });\r\n      return <Redirect push to={`/setups/${this.state.setupId}`} />;\r\n    }\r\n\r\n    if (this.state.deleteSetupRedirect) {\r\n      this.setState({ deleteSetupRedirect: false });\r\n      return <Redirect push to={`/`} />;\r\n    }\r\n\r\n    if (\r\n      this.state.frames.loading ||\r\n      this.state.ephemeras.loading ||\r\n      this.state.skins.loading ||\r\n      this.state.helmets.loading ||\r\n      this.state.colorPickers.loading ||\r\n      this.state.chestAttachments.loading ||\r\n      this.state.armAttachments.loading ||\r\n      this.state.legAttachments.loading ||\r\n      this.state.syandanas.loading ||\r\n      this.state.setupLoading\r\n    ) {\r\n      return <Loading />;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <NewSetupTopPanel\r\n            setup={this.state.setup}\r\n            frames={this.state.frames.data}\r\n            handleNameChange={this.handleNameChange}\r\n            frameOnChange={frame => this.setupElementOnChange(\"frame\", frame)}\r\n            saveSetupOnClick={this.postNewSetup}\r\n            deleteSetupOnClick={this.deleteSetup}\r\n          />\r\n          {this.getErrorMessages()}\r\n          <hr className=\"divider\" />\r\n          <br />\r\n          <div className=\"row\">\r\n            <div className=\"col-8\">\r\n              <NewSetupPhysique\r\n                setup={this.state.setup}\r\n                helmets={this.state.helmets.data.filter(helmet =>\r\n                  helmet.match(`.*${this.state.setup.frame} .*`)\r\n                )}\r\n                helmetOnChange={helmet =>\r\n                  this.setupElementOnChange(\"helmet\", helmet)\r\n                }\r\n                skins={this.state.skins.data.filter(skin =>\r\n                  skin.match(`.*${this.state.setup.frame} .*`)\r\n                )}\r\n                skinOnChange={skin => this.setupElementOnChange(\"skin\", skin)}\r\n                colorPickerComponent={this.getColorPickersComponent(\r\n                  colorName => {\r\n                    return color =>\r\n                      this.setState({\r\n                        setup: {\r\n                          ...this.state.setup,\r\n                          colorScheme: {\r\n                            ...this.state.setup.colorScheme,\r\n                            [`${colorName}`]: color.hex\r\n                          }\r\n                        }\r\n                      });\r\n                  },\r\n                  this.state.setup.colorScheme\r\n                )}\r\n              />\r\n              <br />\r\n              <NewSetupAttachments\r\n                setup={this.state.setup}\r\n                chestAttachments={this.state.chestAttachments.data}\r\n                ephemeras={this.state.ephemeras.data}\r\n                armAttachments={this.state.armAttachments.data}\r\n                legAttachments={this.state.legAttachments.data}\r\n                chestOnChange={chest =>\r\n                  this.attachmentsElementOnChange(\"chest\", chest)\r\n                }\r\n                ephemeraOnChange={ephemera =>\r\n                  this.attachmentsElementOnChange(\"ephemera\", ephemera)\r\n                }\r\n                leftArmOnChange={leftArm =>\r\n                  this.attachmentsElementOnChange(\"leftArm\", leftArm)\r\n                }\r\n                rightArmOnChange={rightArm =>\r\n                  this.attachmentsElementOnChange(\"rightArm\", rightArm)\r\n                }\r\n                leftLegOnChange={leftLeg =>\r\n                  this.attachmentsElementOnChange(\"leftLeg\", leftLeg)\r\n                }\r\n                rightLegOnChange={rightLeg =>\r\n                  this.attachmentsElementOnChange(\"rightLeg\", rightLeg)\r\n                }\r\n                colorPickerComponent={this.getColorPickersComponent(\r\n                  colorName => {\r\n                    return color =>\r\n                      this.setState({\r\n                        setup: {\r\n                          ...this.state.setup,\r\n                          attachments: {\r\n                            ...this.state.setup.attachments,\r\n                            colorScheme: {\r\n                              ...this.state.setup.attachments.colorScheme,\r\n                              [`${colorName}`]: color.hex\r\n                            }\r\n                          }\r\n                        }\r\n                      });\r\n                  },\r\n                  this.state.setup.attachments.colorScheme\r\n                )}\r\n              />\r\n              <br />\r\n              <NewSetupSyandana\r\n                setup={this.state.setup}\r\n                syandanas={this.state.syandanas.data}\r\n                syandanaOnChange={syandana =>\r\n                  this.syandanaOnChange(\"syandana\", syandana)\r\n                }\r\n                colorPickerComponent={this.getColorPickersComponent(\r\n                  colorName => {\r\n                    return color =>\r\n                      this.setState({\r\n                        setup: {\r\n                          ...this.state.setup,\r\n                          syandana: {\r\n                            ...this.state.setup.syandana,\r\n                            colorScheme: {\r\n                              ...this.state.setup.syandana.colorScheme,\r\n                              [`${colorName}`]: color.hex\r\n                            }\r\n                          }\r\n                        }\r\n                      });\r\n                  },\r\n                  this.state.setup.syandana.colorScheme\r\n                )}\r\n              />\r\n            </div>\r\n            <div className=\"col-4\">\r\n              <NewSetupDescription\r\n                description={this.state.setup.description}\r\n                handleDescriptionChange={this.handleDescriptionChange}\r\n                screenshot={this.state.setup.screenshot}\r\n                handleScreenshotChange={this.handleScreenshotChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default NewSetup;\r\n","import React, { Component } from \"react\";\r\n\r\nconst paginationPagesLimit = 5;\r\n\r\nconst getSurroundingPageNumbers = (numberOfPages, currentPage) => {\r\n  let startIndex = Math.max(\r\n    currentPage - Math.floor(paginationPagesLimit / 2),\r\n    1\r\n  );\r\n\r\n  if (startIndex + paginationPagesLimit > numberOfPages)\r\n    startIndex = numberOfPages - paginationPagesLimit + 1;\r\n\r\n  if (numberOfPages < paginationPagesLimit) startIndex = 1;\r\n\r\n  let resultArray = [];\r\n\r\n  for (let i = 0; i < Math.min(numberOfPages, paginationPagesLimit); i++) {\r\n    resultArray = [...resultArray, startIndex + i - 1];\r\n  }\r\n\r\n  return resultArray;\r\n};\r\n\r\nclass SearchPagination extends Component {\r\n  render() {\r\n    return (\r\n      <nav aria-label=\"...\">\r\n        <ul className=\"pagination center\">\r\n          <li\r\n            className={\r\n              this.props.currentFetchPage - 1 === 0\r\n                ? \"page-item disabled\"\r\n                : \"page-item\"\r\n            }\r\n          >\r\n            <button\r\n              className=\"page-link\"\r\n              disabled={this.props.currentFetchPage - 1 === 0}\r\n              onClick={() => this.props.fetchSetups(1)}\r\n            >\r\n              {\"<<\"}\r\n            </button>\r\n          </li>\r\n          <li\r\n            className={\r\n              this.props.currentFetchPage - 1 === 0\r\n                ? \"page-item disabled\"\r\n                : \"page-item\"\r\n            }\r\n          >\r\n            <button\r\n              className=\"page-link\"\r\n              disabled={this.props.currentFetchPage - 1 === 0}\r\n              onClick={() =>\r\n                this.props.fetchSetups(this.props.currentFetchPage - 1)\r\n              }\r\n            >\r\n              {\"<\"}\r\n            </button>\r\n          </li>\r\n          {getSurroundingPageNumbers(\r\n            this.props.numberOfPages,\r\n            this.props.currentFetchPage\r\n          ).map(i => (\r\n            <li\r\n              className={\r\n                i + 1 === this.props.currentFetchPage\r\n                  ? \"page-item active\"\r\n                  : \"page-item\"\r\n              }\r\n            >\r\n              <button\r\n                className=\"page-link\"\r\n                disabled={i + 1 === this.props.currentFetchPage}\r\n                onClick={() => this.props.fetchSetups(i + 1)}\r\n              >\r\n                {i + 1}\r\n              </button>\r\n            </li>\r\n          ))}\r\n          <li\r\n            className={\r\n              this.props.currentFetchPage === this.props.numberOfPages ||\r\n              (this.props.currentFetchPage - 1 === this.props.numberOfPages &&\r\n                this.props.numberOfPages === 0)\r\n                ? \"page-item disabled\"\r\n                : \"page-item\"\r\n            }\r\n          >\r\n            <button\r\n              className=\"page-link\"\r\n              disabled={\r\n                this.props.currentFetchPage === this.props.numberOfPages ||\r\n                (this.props.currentFetchPage - 1 === this.props.numberOfPages &&\r\n                  this.props.numberOfPages === 0)\r\n              }\r\n              onClick={() =>\r\n                this.props.fetchSetups(this.props.currentFetchPage + 1)\r\n              }\r\n            >\r\n              {\">\"}\r\n            </button>\r\n          </li>\r\n          <li\r\n            className={\r\n              this.props.currentFetchPage === this.props.numberOfPages ||\r\n              (this.props.currentFetchPage - 1 === this.props.numberOfPages &&\r\n                this.props.numberOfPages === 0)\r\n                ? \"page-item disabled\"\r\n                : \"page-item\"\r\n            }\r\n          >\r\n            <button\r\n              className=\"page-link\"\r\n              disabled={\r\n                this.props.currentFetchPage === this.props.numberOfPages ||\r\n                (this.props.currentFetchPage - 1 === this.props.numberOfPages &&\r\n                  this.props.numberOfPages === 0)\r\n              }\r\n              onClick={() => this.props.fetchSetups(this.props.numberOfPages)}\r\n            >\r\n              {\">>\"}\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchPagination;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport { fetchAuth } from \"../../utils/fetchAuth\";\r\nimport {\r\n  mapToOption,\r\n  mapToOptions,\r\n  mapToOptionsWithNone\r\n} from \"../../utils/mapToOptions\";\r\nimport Loading from \"../utils/Loading.js\";\r\nimport SearchPagination from \"./SearchPagination\";\r\n\r\nconst fetchLimit = 9;\r\nconst setupFilters = [\"Popular\", \"New\", \"Oldest\"];\r\n\r\nclass SearchList extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      filter: setupFilters[0],\r\n      currentFetchPage: 0,\r\n      numberOfPages: 1,\r\n      frame: \"None\",\r\n      setups: {\r\n        loading: true,\r\n        data: [],\r\n        error: \"\"\r\n      },\r\n      frames: {\r\n        loading: true,\r\n        data: [],\r\n        error: \"\"\r\n      }\r\n    };\r\n\r\n    this.frameSelectOnChange = this.frameSelectOnChange.bind(this);\r\n    this.filterSelectOnChange = this.filterSelectOnChange.bind(this);\r\n    this.fetchSetups = this.fetchSetups.bind(this);\r\n  }\r\n\r\n  async fetchFrames() {\r\n    try {\r\n      const res = await fetchAuth(`/api/frames`);\r\n      const resJson = await res.json();\r\n\r\n      if (res.ok) {\r\n        this.setState({\r\n          frames: {\r\n            ...this.state.frames,\r\n            loading: false,\r\n            error: \"\",\r\n            data: resJson.frames\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({\r\n          frames: {\r\n            ...this.state.frames,\r\n            loading: false,\r\n            error: resJson.message\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      this.setState({\r\n        frames: {\r\n          ...this.state.frames,\r\n          loading: false,\r\n          error: `Could not fetch frames`\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  async fetchSetups(index) {\r\n    try {\r\n      const res = await fetchAuth(\r\n        `/setups?frame=${this.state.frame}&order=${\r\n          this.state.filter\r\n        }&limit=${fetchLimit}&offset=${(index - 1) * fetchLimit}`\r\n      );\r\n      const resJson = await res.json();\r\n\r\n      if (res.ok) {\r\n        this.setState({\r\n          currentFetchPage: index,\r\n          numberOfPages: Math.ceil(resJson.setupsCount / fetchLimit) || 1,\r\n          setups: {\r\n            ...this.state.setups,\r\n            loading: false,\r\n            error: \"\",\r\n            data: resJson.setups\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({\r\n          setups: {\r\n            ...this.state.setups,\r\n            loading: false,\r\n            error: resJson.message\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      this.setState({\r\n        setups: {\r\n          ...this.state.setups,\r\n          loading: false,\r\n          error: `Could not fetch setups`\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  async frameSelectOnChange(e) {\r\n    await this.setState({ frame: e.value }, () => this.fetchSetups(1));\r\n  }\r\n\r\n  async filterSelectOnChange(e) {\r\n    await this.setState({ filter: e.value }, () => this.fetchSetups(1));\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.fetchFrames();\r\n    await this.fetchSetups(1);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.frames.loading || this.state.setups.loading) {\r\n      return <Loading />;\r\n    } else {\r\n      return (\r\n        <div className=\"center\">\r\n          <SearchPagination\r\n            currentFetchPage={this.state.currentFetchPage}\r\n            numberOfPages={this.state.numberOfPages}\r\n            fetchSetups={this.fetchSetups}\r\n          />\r\n          <br />\r\n          <div className=\"row\">\r\n            <div className=\"col-3\"></div>\r\n            <div className=\"col-3\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"frameSelect\">Filter by frame</label>\r\n                <Select\r\n                  id=\"frameSelect\"\r\n                  value={mapToOption(this.state.frame)}\r\n                  options={mapToOptionsWithNone(this.state.frames.data)}\r\n                  onChange={this.frameSelectOnChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"filterSelect\">Sort by</label>\r\n                <Select\r\n                  id=\"filterSelect\"\r\n                  value={mapToOption(this.state.filter)}\r\n                  options={mapToOptions(setupFilters)}\r\n                  onChange={this.filterSelectOnChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-3\"></div>\r\n          </div>\r\n          <ul className=\"list-group\">\r\n            {this.state.setups.data.map((setup, i) => (\r\n              <Link to={`/fashionframe/setups/${setup.id}`} key={i}>\r\n                <li\r\n                  className=\"list-group-item\"\r\n                  style={{ marginBottom: \"10px\" }}\r\n                >\r\n                  <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                      <h3>{setup.name}</h3>\r\n                      <h4>Frame: {setup.frame}</h4>\r\n                      <hr className=\"divider\" />\r\n                      <span className=\"badge badge-primary\">\r\n                        <i className=\"fa fa-star\"></i>\r\n                        {setup.liked}\r\n                      </span>\r\n                      <h5>Author: {setup.username}</h5>\r\n                      <small>\r\n                        Created at: {setup.created_at.match(/\\w+-\\w+-\\w+/)[0]}\r\n                      </small>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                      <img\r\n                        src={setup.screenshot}\r\n                        alt=\"Thumbnail\"\r\n                        className=\"search-thumbnail\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              </Link>\r\n            ))}\r\n          </ul>\r\n          {/* <ul className=\"horizontal-list\">\r\n            {this.state.setups.data.map((setup, i) => (\r\n              <Link to={`/fashionframe/setups/${setup.id}`} key={i}>\r\n                <li className=\"search-list-item center\">\r\n                  <h3>{setup.name}</h3>\r\n                  <h4>Frame: {setup.frame}</h4>\r\n                  <hr className=\"divider\" />\r\n                  <span className=\"badge badge-primary\">\r\n                    <i className=\"fa fa-star\"></i>\r\n                    {setup.liked}\r\n                  </span>\r\n                  <h5>Author: {setup.username}</h5>\r\n                  <small>\r\n                    Created at: {setup.created_at.match(/\\w+-\\w+-\\w+/)[0]}\r\n                  </small>\r\n                  <br />\r\n                  <img\r\n                    src={setup.screenshot}\r\n                    alt=\"Thumbnail\"\r\n                    className=\"search-thumbnail\"\r\n                  />\r\n                </li>\r\n              </Link>\r\n            ))}\r\n          </ul> */}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default SearchList;\r\n","import { hexToRgb } from \"./convertColor.js\";\r\n\r\nexport const mapColors = colors => {\r\n  let resultObject = {};\r\n\r\n  colors.forEach(color => {\r\n    resultObject[color] = hexToRgb(color);\r\n  });\r\n\r\n  return resultObject;\r\n};\r\n","export const componentToHex = c => {\r\n  const hex = c.toString(16);\r\n\r\n  return hex.length === 1 ? \"0\" + hex : hex;\r\n};\r\n\r\nexport const rgbToHex = (r, g, b) => {\r\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n};\r\n\r\nexport const hexToRgb = hex => {\r\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\r\n  return result\r\n    ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n      }\r\n    : null;\r\n};\r\n","import React from \"react\";\r\n\r\nfunction ColorButton(color) {\r\n  return (\r\n    <div\r\n      className={!color ? \"color-button transparent-checkered\" : \"color-button\"}\r\n      style={{\r\n        backgroundColor: color ? color : \"#d1d1d1\"\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ColorButton;\r\n","import React, { Component } from \"react\";\r\nimport nearestColor from \"nearest-color\";\r\nimport { mapColors } from \"../../utils/mapColors.js\";\r\nimport ColorButton from \"./ColorButton.js\";\r\n\r\nconst columnCount = 5;\r\nconst rowCount = 18;\r\n\r\nconst getColumnRow = (color, colors) => {\r\n  const index = colors.findIndex(e => e === color);\r\n\r\n  return {\r\n    column: Math.ceil(index / rowCount) + 1,\r\n    row: Math.ceil(index / columnCount) + 1\r\n  };\r\n};\r\n\r\nclass ColorsModal extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          data-toggle=\"modal\"\r\n          data-target={`#${this.props.modalName}`}\r\n        >\r\n          Check colors\r\n        </button>\r\n\r\n        <div\r\n          className=\"modal fade\"\r\n          id={`${this.props.modalName}`}\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby={`${this.props.modalName}Label`}\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id={`${this.props.modalName}Label`}>\r\n                  Color choices for {this.props.color}\r\n                  {ColorButton(this.props.color)}\r\n                </h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <ul className=\"list-group\">\r\n                  {Object.keys(this.props.colorPickers).map(colorPicker => {\r\n                    const nearestColorPickersValue = nearestColor.from(\r\n                      mapColors(this.props.colorPickers[colorPicker])\r\n                    );\r\n\r\n                    const closestColor = nearestColorPickersValue(\r\n                      this.props.color\r\n                    );\r\n\r\n                    const columnRow = getColumnRow(\r\n                      closestColor.value,\r\n                      this.props.colorPickers[colorPicker]\r\n                    );\r\n\r\n                    return (\r\n                      <li className=\"list-group-item\" key={colorPicker}>\r\n                        {colorPicker}: Column {columnRow.column}, Row{\" \"}\r\n                        {columnRow.row}\r\n                        {closestColor.distance > 20 && (\r\n                          <span style={{ color: \"#ff0000\" }}>\r\n                            {\" \"}\r\n                            - No close choice\r\n                          </span>\r\n                        )}\r\n                        <br />\r\n                        {ColorButton(closestColor.value)}\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  data-dismiss=\"modal\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorsModal;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchAuth } from \"../../utils/fetchAuth\";\r\nimport Loading from \"../utils/Loading.js\";\r\nimport ColorsModal from \"../utils/ColorsModal.js\";\r\nimport ColorButton from \"../utils/ColorButton.js\";\r\n\r\nconst formatName = name => {\r\n  return name.charAt(0).toUpperCase() + name.slice(1);\r\n};\r\n\r\nconst getColorButton = (color, colorPickers, modalName) => {\r\n  return (\r\n    <div>\r\n      {ColorButton(color)}\r\n      <br />\r\n      {color && (\r\n        <ColorsModal\r\n          color={color}\r\n          colorPickers={colorPickers}\r\n          modalName={modalName}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst colorNamesToButtons = (\r\n  colorScheme,\r\n  colorPickers,\r\n  modalName,\r\n  colorNames\r\n) => {\r\n  return colorNames.map((colorName, i) => (\r\n    <div className=\"col-3\" key={i}>\r\n      <div className=\"form-group\">\r\n        <label htmlFor={colorName}>{formatName(colorName)}</label>\r\n        <div id={colorName}>\r\n          {getColorButton(\r\n            colorScheme[colorName],\r\n            colorPickers,\r\n            modalName + colorName\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ));\r\n};\r\n\r\nconst getColorsBlock = (colorScheme, colorPickers, modalName) => (\r\n  <div>\r\n    <div className=\"row\">\r\n      {colorNamesToButtons(\r\n        colorScheme,\r\n        colorPickers,\r\n        modalName,\r\n        Object.keys(colorScheme).slice(1, 5)\r\n      )}\r\n    </div>\r\n    <br />\r\n    <div className=\"row\">\r\n      {colorNamesToButtons(\r\n        colorScheme,\r\n        colorPickers,\r\n        modalName,\r\n        Object.keys(colorScheme).slice(5, 9)\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nclass Setup extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      setup: {\r\n        loading: true,\r\n        data: {},\r\n        error: \"\"\r\n      },\r\n      colorPickers: {\r\n        loading: true,\r\n        data: [],\r\n        error: \"\"\r\n      }\r\n    };\r\n  }\r\n\r\n  async fetchSetupData() {\r\n    try {\r\n      const res = await fetchAuth(`/setups/${this.props.match.params.id}`);\r\n      const resJson = await res.json();\r\n\r\n      if (res.ok) {\r\n        this.setState({\r\n          setup: {\r\n            ...this.state.setup,\r\n            loading: false,\r\n            error: \"\",\r\n            data: resJson.setup\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({\r\n          setup: {\r\n            ...this.state.setup,\r\n            loading: false,\r\n            error: resJson.message\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      this.setState({\r\n        setup: {\r\n          ...this.state.setup,\r\n          loading: false,\r\n          error: `Could not fetch setup data`\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  async likeSetup() {\r\n    try {\r\n      const res = await fetchAuth(\r\n        `/setups/like/${this.props.match.params.id}`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({ like: !this.state.setup.data.likedbyyou })\r\n        }\r\n      );\r\n\r\n      if (res.ok) {\r\n        this.setState({\r\n          setup: {\r\n            ...this.state.setup,\r\n            loading: false,\r\n            error: \"\",\r\n            data: {\r\n              ...this.state.setup.data,\r\n              likedbyyou: !this.state.setup.data.likedbyyou,\r\n              liked:\r\n                parseInt(this.state.setup.data.liked) +\r\n                (this.state.setup.data.likedbyyou ? -1 : 1)\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        const resJson = await res.json();\r\n        this.setState({\r\n          setup: {\r\n            ...this.state.setup,\r\n            loading: false,\r\n            error: resJson.message\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      this.setState({\r\n        setup: {\r\n          ...this.state.setup,\r\n          loading: false,\r\n          error: `Could not like setup - please try again`\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  async fetchColorPickers() {\r\n    try {\r\n      const res = await fetchAuth(`/api/colorPickers`);\r\n      const resJson = await res.json();\r\n\r\n      if (res.ok) {\r\n        this.setState({\r\n          colorPickers: {\r\n            ...this.state.colorPickers,\r\n            loading: false,\r\n            error: \"\",\r\n            data: resJson.colorPickers\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({\r\n          colorPickers: {\r\n            ...this.state.colorPickers,\r\n            loading: false,\r\n            error: resJson.message\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      this.setState({\r\n        colorPickers: {\r\n          ...this.state.colorPickers,\r\n          loading: false,\r\n          error: `Could not fetch colors data`\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.fetchSetupData();\r\n    await this.fetchColorPickers();\r\n  }\r\n\r\n  render() {\r\n    if (this.state.setup.loading || this.state.colorPickers.loading) {\r\n      return <Loading />;\r\n    } else {\r\n      const setup = this.state.setup.data;\r\n\r\n      return (\r\n        <div>\r\n          {this.state.setup.error && (\r\n            <div className=\"alert alert-danger center\" role=\"alert\">\r\n              {this.state.setup.error}\r\n              <br />\r\n              <Link to={\"/fashionframe/\"}>Go back to setups</Link>\r\n            </div>\r\n          )}\r\n          <h1 className=\"center\">{setup.name}</h1>\r\n          <br />\r\n          <div className=\"row\">\r\n            <div className=\"col-4\">\r\n              <h3>Frame: {setup.frame}</h3>\r\n              <br />\r\n              <h5>Description: {setup.description}</h5>\r\n              <br />\r\n              <h5>Author: {setup.username}</h5>\r\n              <small>\r\n                Created at: {setup.created_at.match(/\\w+-\\w+-\\w+/)[0]}\r\n              </small>\r\n              <br />\r\n              {this.props.isAuthorized && (\r\n                <button\r\n                  className={`btn btn-${\r\n                    this.state.setup.data.likedbyyou ? \"primary\" : \"secondary\"\r\n                  }`}\r\n                  onClick={() => this.likeSetup()}\r\n                >\r\n                  {this.state.setup.data.likedbyyou ? \"Unlike\" : \"Like\"}:{\" \"}\r\n                  <i className=\"fa fa-star\"></i>{\" \"}\r\n                  <span className=\"badge badge-light\">\r\n                    {this.state.setup.data.liked}\r\n                  </span>\r\n                </button>\r\n              )}\r\n              {this.props.isAuthorized &&\r\n                this.props.userId === this.state.setup.data.user_id && (\r\n                  <div>\r\n                    <br />\r\n                    <Link\r\n                      className={`btn btn-primary`}\r\n                      to={`/setups/${this.props.match.params.id}/edit`}\r\n                    >\r\n                      Edit\r\n                    </Link>\r\n                  </div>\r\n                )}\r\n            </div>\r\n            <div className=\"col-8\">\r\n              <img\r\n                src={this.state.setup.data.screenshot}\r\n                alt=\"Thumbnail\"\r\n                className=\"setup-image\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <hr className=\"divider\" />\r\n          <div\r\n            className=\"center collapse-button-dark\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#collapsePhysique\"\r\n            aria-expanded=\"false\"\r\n            aria-controls=\"collapsePhysique\"\r\n          >\r\n            PHYSIQUE\r\n          </div>\r\n          <div className=\"collapse show\" id=\"collapsePhysique\">\r\n            <div className=\"card card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  Helmet <h3>{setup.helmet}</h3>\r\n                  <br />\r\n                  Skin <h3>{setup.skin}</h3>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  {getColorsBlock(\r\n                    setup.colorScheme,\r\n                    this.state.colorPickers.data,\r\n                    \"physique\"\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <div\r\n            className=\"center collapse-button-dark\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#collapseAttachments\"\r\n            aria-expanded=\"false\"\r\n            aria-controls=\"collapseAttachments\"\r\n          >\r\n            ATTACHMENTS\r\n          </div>\r\n          <div className=\"collapse\" id=\"collapseAttachments\">\r\n            <div className=\"card card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                      Chest <h3>{setup.attachments.chest || \"None\"}</h3>\r\n                      <br />\r\n                      Left Arm <h3>{setup.attachments.leftArm || \"None\"}</h3>\r\n                      <br />\r\n                      Left Leg <h3>{setup.attachments.leftLeg || \"None\"}</h3>\r\n                      <br />\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                      Ephemera <h3>{setup.attachments.ephemera || \"None\"}</h3>\r\n                      <br />\r\n                      Right Arm <h3>{setup.attachments.rightArm || \"None\"}</h3>\r\n                      <br />\r\n                      Left Leg <h3>{setup.attachments.rightArm || \"None\"}</h3>\r\n                      <br />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  {getColorsBlock(\r\n                    setup.attachments.colorScheme,\r\n                    this.state.colorPickers.data,\r\n                    \"attachments\"\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <div\r\n            className=\"center collapse-button-dark\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#collapseSyandana\"\r\n            aria-expanded=\"false\"\r\n            aria-controls=\"collapseSyandana\"\r\n          >\r\n            SYANDANA\r\n          </div>\r\n          <div className=\"collapse\" id=\"collapseSyandana\">\r\n            <div className=\"card card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  Syandana <h3>{setup.syandana.name || \"None\"}</h3>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  {getColorsBlock(\r\n                    setup.syandana.colorScheme,\r\n                    this.state.colorPickers.data,\r\n                    \"syandana\"\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Setup;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport PrivateRoute from \"./PrivateRoute.js\";\r\nimport SignIn from \"./SignIn.js\";\r\nimport NotFound from \"./NotFound.js\";\r\nimport Settings from \"./Settings.js\";\r\nimport NewSetup from \"../setups/NewSetup.js\";\r\nimport SearchList from \"../search/SearchList.js\";\r\nimport Setup from \"../setups/Setup.js\";\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid main-body\">\r\n        <Switch>\r\n          <Route exact path=\"/fashionframe/\" component={SearchList} />\r\n          <Route exact path=\"/fashionframe/signin\" component={SignIn} />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/fashionframe/settings\"\r\n            component={Settings}\r\n            isAuthorized={this.props.isAuthorized}\r\n            userData={this.props.userData}\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/fashionframe/setups/new\"\r\n            component={NewSetup}\r\n            isAuthorized={this.props.isAuthorized}\r\n            mode=\"new\"\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/fashionframe/setups/:id/edit\"\r\n            component={NewSetup}\r\n            isAuthorized={this.props.isAuthorized}\r\n            mode=\"edit\"\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/fashionframe/setups/:id\"\r\n            render={props => (\r\n              <Setup\r\n                {...props}\r\n                isAuthorized={this.props.isAuthorized}\r\n                userId={this.props.userData.id}\r\n              />\r\n            )}\r\n          />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"./core/Navbar.js\";\r\nimport Main from \"./core/Main.js\";\r\nimport { fetchAuth } from \"../utils/fetchAuth\";\r\nimport Loading from \"./utils/Loading.js\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { loadingUserData: true, isAuthorized: false, userData: {} };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const res = await fetchAuth(\"/auth/user\");\r\n      const resJson = await res.json();\r\n\r\n      if (!resJson.error) {\r\n        this.setState({\r\n          userData: resJson,\r\n          isAuthorized: true,\r\n          loadingUserData: false\r\n        });\r\n      } else {\r\n        this.setState({ isAuthorized: false, loadingUserData: false });\r\n      }\r\n    } catch (err) {\r\n      this.setState({ isAuthorized: false, loadingUserData: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loadingUserData) {\r\n      return <Loading />;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Navbar\r\n            isAuthorized={this.state.isAuthorized}\r\n            userData={this.state.userData}\r\n          />\r\n          <br />\r\n          <Main\r\n            isAuthorized={this.state.isAuthorized}\r\n            userData={this.state.userData}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./stylesheets/index.scss\";\n// import \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap.js\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}